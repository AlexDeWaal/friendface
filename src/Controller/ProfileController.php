<?php
namespace App\Controller;

use App\Entity\UserProfile;
use App\Entity\Avatar;
use App\Form\UserProfileType;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use App\Service\FileUploader;

class ProfileController extends AbstractController
{
    /**
     * @Route("/profile/{id}", name="profile_view")
     */
    public function viewProfile($id = "1")
    {
        $userId = (int) $id;

        $user = $this->getDoctrine()
            ->getRepository(UserProfile::class)
            ->find($userId);

        $model = array('user' => $user);
        $view = 'profile.html.twig';

        return $this->render($view, $model);
    }

    /**
     * @Route("/register", name="profile_new")
     */
    public function newProfile(Request $request)
    {
        $userProfile = new UserProfile();
        $form = $this->createForm(UserProfileType::class, $userProfile);

        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            // $form->getData() holds the submitted values
            $userProfile = $form->getData();

            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            $file = $avatar->getAvatar();
            $fileName = $fileUploader->upload($file);

            new File($this->getParameter('avatar_directory').'/'.$avatar->getAvatar());

            $avatar->setAvatar($fileName);

            // Move the file to the directory where brochures are stored
            try {
                $file->move(
                    $this->getParameter('avatar_directory'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $avatar->setAvatar($fileName);

            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($userProfile);
            $entityManager->flush();

            return $this->redirectToRoute('profile_success');
        }

        $view = 'register.html.twig';
        $model = array('form' => $form->createView());

        return $this->render($view, $model);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/success", name="profile_success")
     */
    public function successProfile(Request $request)
    {
        $view = 'success.html.twig';
        $model = array();
        return $this->render($view, $model);
    }
}

?>